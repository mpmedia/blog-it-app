@mixin nowrap {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin border-box {
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
}

@mixin transition($property: all, $duration: 0.5s, $function: ease, $delay: 0) {
  transition: $property $duration $function $delay;
  -webkit-transition: $property $duration $function $delay;
  -moz-transition: $property $duration $function $delay;
  -o-transition: $property $duration $function $delay;
}

@mixin transform($value) {
  -webkit-transform: $value;
  -moz-transform: $value;
  transform: $value;
}

@mixin animation($name, $time: 1s, $function: ease, $repeat: infinite) {
  -webkit-animation: $name $time $function $repeat;
  -moz-animation: $name $time $function $repeat;
  -o-animation: $name $time $function $repeat;
  animation: $name $time $function $repeat;
}

@mixin box-shadow($blur, $color, $inset: null, $offsetLeft: 0, $offsetTop: 0, $width: 0) {
  -webkit-box-shadow: $inset $offsetLeft $offsetTop $blur $width $color;
  -moz-box-shadow: $inset $offsetLeft $offsetTop $blur $width $color;
  box-shadow: $inset $offsetLeft $offsetTop $blur $width $color;
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes $animation-name {
    @content;
  }
  @-moz-keyframes $animation-name {
    @content;
  }
  @keyframes $animation-name {
    @content;
  }
}

%opacity-animation.ng-enter {
  @include transition(opacity, 1s);
  opacity: 0;
}

%opacity-animation.ng-enter-active {
  opacity: 1;
}

%opacity-animation.ng-leave {
  opacity: 1;
}

%opacity-animation.ng-leave-active {
  opacity: 0;
}

%submit-btn {
  color: $lighter-gray;
  background: $base-gray;
  border-color: transparent $dark-gray $dark-gray transparent;
  padding: 0.6em;
  @include transition;
  text-decoration: none;

  &:hover {
    background: $base-contrast-color-light;
    border-color: transparent $base-contrast-color $base-contrast-color transparent;
    color: white;
  }
}