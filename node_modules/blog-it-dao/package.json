{
  "name": "blog-it-dao",
  "version": "0.1.0",
  "description": "dao factory used for Blog it, it create a service for a given mongodb collection. Every method of the API returns a promise",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "es6-promise": "~0.1.1"
  },
  "devDependencies": {
    "mongodb": "~1.4.0",
    "jasmine-node": "~1.14.3"
  },
  "scripts": {
    "test": "NODE_ENV=test ./node_modules/.bin/jasmine-node ./test --verbose --forceexit"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/blog-it/blog-it-dao.git"
  },
  "keywords": [
    "dao",
    "mongodb",
    "factory"
  ],
  "author": {
    "name": "Laurent RENARD"
  },
  "license": "MIT",
  "readme": "# blog-it-dao\n\n[![Build Status](https://travis-ci.org/blog-it/blog-it-dao.svg?branch=master)](https://travis-ci.org/blog-it/blog-it-dao)\n\nblog-it-doa is a [nodejs](http://nodejs.org/) module to create services in order to perform standard CRUD operation on a [mongodb](https://www.mongodb.org) collection.\nThe whole API returns promises\n\n## Getting started\n\nYou will need a connected db instance. Then simply use the factory like this:\n\n```javascript\n//assuming you have a connected db in the 'db' variable\nvar daoFactory=require('blog-it-dao');\nvar service=daoFactory(db,'a collection');\n\n//now you can use your service\nservice.findOne('id').then(function(item){\n\n});\n```\n\n## API\n\nRefer to the [mongodb nodejs driver documentation](http://mongodb.github.io/node-mongodb-native/api-generated/collection.html) for further details. The main difference is that blog-it-dao API does not take a callback but return a promise\nwhich will be resolve with the expected result or rejected with the error if any\n\n```javascript\ncollection.findOne(selector, options, function(err, item){\n    if(err){\n        console.log(err);\n        throw err;\n    }\n    //do something with the item\n});\n```\nwill be\n\n```javascript\ndaoService.findOne(selector, options).then(function(item){\n        //do something with the item\n    },\n    function(err){\n        console.log(err);\n    }\n);\n```\nThe supported method are\n\n* [findOne](http://mongodb.github.io/node-mongodb-native/api-generated/collection.html#findOne)\n* [find](http://mongodb.github.io/node-mongodb-native/api-generated/collection.html#find)\n* [insert](http://mongodb.github.io/node-mongodb-native/api-generated/collection.html#insert)\n* [remove](http://mongodb.github.io/node-mongodb-native/api-generated/collection.html#remove)\n* [save](http://mongodb.github.io/node-mongodb-native/api-generated/collection.html#save)\n* [update](http://mongodb.github.io/node-mongodb-native/api-generated/collection.html#update)\n\nadditionally, blog-it-dao expose some method \"by id\":\n\n* findById(id, options): equivalent to findOne with selector ```{_id:id}```\n* removeById(id, options): equivalent to remove with selector ```{_id:id}```\n* updateById(id, options): equivalent to update with selector ```{_id:id}```\n\n## running test\n\nsimply run ```npm test``` in a command shell\n\n## Licence\n\n> Copyright (C) 2014 Laurent Renard.\n>\n> Permission is hereby granted, free of charge, to any person\n> obtaining a copy of this software and associated documentation files\n> (the \"Software\"), to deal in the Software without restriction,\n> including without limitation the rights to use, copy, modify, merge,\n> publish, distribute, sublicense, and/or sell copies of the Software,\n> and to permit persons to whom the Software is furnished to do so,\n> subject to the following conditions:\n>\n> The above copyright notice and this permission notice shall be\n> included in all copies or substantial portions of the Software.\n>\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n> EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n> MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n> NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n> BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n> ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n> CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n> SOFTWARE.\n\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/blog-it/blog-it-dao/issues"
  },
  "homepage": "https://github.com/blog-it/blog-it-dao",
  "_id": "blog-it-dao@0.1.0",
  "_from": "blog-it-dao@~0.1.0"
}
