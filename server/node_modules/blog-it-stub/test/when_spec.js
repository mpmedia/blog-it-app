var stub = require('../index.js');

describe('stubbing library', function () {

    it('should stub resolving promise', function (done) {

        var original = {
            test: function () {

            }
        };
        var object = stub.when(original, 'test').thenResolveWith('value');
        var result;

        original.test().then(function (val) {
            result = val;
            expect(result).toEqual('value');
            expect(object.hasBeenResolved()).toBe(true);
            expect(object.hasBeenRejected()).toBe(false);
            done();
        });

        expect(object.hasBeenResolved()).toBe(false);
        expect(object.hasBeenRejected()).toBe(false);
        expect(result).not.toBeDefined();
        object.flush();

    });

    it('should reject promise', function (done) {

        var original = {
            test: function () {

            }
        };
        var object = stub.when(original, 'test').thenRejectWith('error');
        var result;

        original.test().then(function (val) {
            expect(true).toBe(false);
        }, function (err) {
            result = err;
            expect(err).toEqual('error');
            expect(object.hasBeenResolved()).toBe(false);
            expect(object.hasBeenRejected()).toBe(true);
            done();
        });

        expect(result).not.toBeDefined();
        expect(object.hasBeenResolved()).toBe(false);
        expect(object.hasBeenRejected()).toBe(false);
        object.flush();
    });
});
